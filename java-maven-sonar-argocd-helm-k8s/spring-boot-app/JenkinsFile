pipeline {
    agent {
        docker {
            image 'prakashpotnuru11/java17-git-docker-agent:v3'
        }
    }

    environment {
        SONAR_TOKEN = credentials('sonar-token')   // replace with your Jenkins credential ID
        GIT_USER_NAME = 'prakashpotnuru11'
        GIT_USER_EMAIL = 'your-email@example.com'  // replace with your Git email
        GITHUB_TOKEN = credentials('github-token') // replace with your GitHub token credential ID
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/prakashpotnuru11/java-maven-sonar-argocd-helm-k8s.git'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_TOKEN')]) {
                    sh """
                        mvn clean verify sonar:sonar \
                        -Dsonar.projectKey=spring-boot-demo \
                        -Dsonar.host.url=http://<your-sonarqube-url>:9000 \
                        -Dsonar.login=$SONAR_TOKEN
                    """
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    def imageName = "prakashpotnuru11/spring-boot-demo"
                    def imageTag = "v${BUILD_NUMBER}"
                    sh """
                        docker build -t ${imageName}:${imageTag} .
                        echo "$GITHUB_TOKEN" | docker login ghcr.io -u $GIT_USER_NAME --password-stdin
                        docker push ${imageName}:${imageTag}
                    """
                }
            }
        }

        stage('Update Deployment File and Push to GitHub') {
            steps {
                sh """
                    sed -i 's|image: .*|image: prakashpotnuru11/spring-boot-demo:v${BUILD_NUMBER}|' k8s/deployment.yaml
                    git config --global user.email "$GIT_USER_EMAIL"
                    git config --global user.name "$GIT_USER_NAME"
                    git add k8s/deployment.yaml
                    git commit -m "Updated image to v${BUILD_NUMBER}"
                    git push origin main
                """
            }
        }
    }
}
